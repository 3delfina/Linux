--------------------------------------------------------------------------------
    LAB 06                                                      GDB & DEBUGGING
--------------------------------------------------------------------------------

    Answer all questions for Lab06 in this file. Questions or tasks which 
    require you to edit another file have the name of the file already 
    entered for you.

--------------------------------------------------------------------------------
    QUESTIONS
--------------------------------------------------------------------------------

------------------
    QUESTION 1 
------------------

A)  There are no debugflags. Added -g

B)  Segmentation fault (core dumped)
    gdb --tui myprog
     
C) break main

D) line 9
    generateRandomData(data, SIZE_OF_DATA); 

E) step (or s)
    
F) Program received signal SIGSEGV, Segmentation fault.
In line 10: in generateRandomData (data=0x7fffffffe3f0, len=10) at util.c:10


G) print dataptr
  $1 = (int *) 0x0

    
H)  print *dataptr
    There is an error: Cannot access memory at address 0x0
    In C you cannot tell the machine where to store variables, there are memory locations allocated for the code automatically.
    Therefore the memory at the address 0x0 is not accessible.
    
I)  
The for loop keeps printing infinitely, but there is also an error message about Segmentation fault at the bottom
0: 16
-1: 0
-2: 4195900
-3: 0
-4: 0
-5: 32741
-6: -1439895216
-7: 0
-8: 0
-9: 32766
-10: -365093504
-11: 10
...
Segmentation fault (core dumped)

J) At line 12, as we have a problem with printing array elements in the following loop.

K) The following are the indices and values of the array
0: 75 
-1: 0 
-2: 4195900 
-3: 0195900
etc...

If we fix the issue in the loop, these are the contents of the array:
0: 8
1: 11
2: 75
3: 55
4: 50
5: 95
6: 5
7: 18
8: 73
9: 90


L) watch i

M) We get messages about the changes of the value of i, it decreases, for example:
Old value = 0
New value = -1
0x0000000000400640 in main () at main.c:13


N) i is always decreasing so the loop never stops as the condition i<SIZE_OF_DATA holds
values printed to the screen have were not generated by generateRandomData function

O) Change -- to ++ so that index would increase from 0 to SIZE_OF_DATA-1.
